{
	"name": "edw_sql_unit_holder_attributes_dataflow",
	"properties": {
		"folder": {
			"name": "EDW"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "edw_source_file_extract",
						"type": "DatasetReference"
					},
					"name": "UnitHolderSource",
					"description": "Add fund source data"
				},
				{
					"linkedService": {
						"referenceName": "pps_edw_dev_db",
						"type": "LinkedServiceReference"
					},
					"name": "UnitHolderEntityTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "edw_database_stage",
						"type": "DatasetReference"
					},
					"name": "LoadToUnitHolderAttributesStage",
					"rejectedDataLinkedService": {
						"referenceName": "pps-synapse-dev-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					}
				},
				{
					"linkedService": {
						"referenceName": "data_lake_dev",
						"type": "LinkedServiceReference"
					},
					"name": "ExportInvalidData",
					"description": "Export invalid data"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn",
					"description": "Add batch id, data source, effective date and valid column"
				},
				{
					"name": "LookupUnitHolderEntityId"
				},
				{
					"name": "RenameUnitHolderEntityColumns",
					"description": "Rename entity fund columns "
				},
				{
					"name": "ValidateData",
					"description": "Validate data"
				},
				{
					"name": "DeriveValidColumns",
					"description": "Derive valid columns"
				},
				{
					"name": "FilterInvalidData"
				}
			],
			"scriptLines": [
				"parameters{",
				"     BatchId as string,",
				"     FileName as string,",
				"     FileDirectory as string",
				"}",
				"source(output(",
				"          UnitHolderID as string,",
				"          UnitHolderCategory as string,",
				"          UnitHolderStatus as string,",
				"          FirstNames as string,",
				"          MiddleNames as string,",
				"          Surname as string,",
				"          Initials as string,",
				"          Title as string,",
				"          IDNumber as long,",
				"          IDType as string,",
				"          PlaceofIssue as string,",
				"          DateofBirth as date,",
				"          MaritalStatusCode as string,",
				"          MaritalStatusDescription as string,",
				"          Gender as string,",
				"          TelephoneHomeNumber as string,",
				"          TelephoneWorkNumber as string,",
				"          CellPhoneNumber as string,",
				"          FaxNumber as string,",
				"          EmailPrimaryAddress as string,",
				"          EmailSecondaryAddress as string,",
				"          CompanyName as string,",
				"          ContactName as string,",
				"          CompanyRegistrationNumber as string,",
				"          Commencementdate as date,",
				"          CorrAddressLine1 as string,",
				"          CorrAddressLine2 as string,",
				"          CorrAddressLine3 as string,",
				"          CorrAddressLine4 as string,",
				"          CorrCountry as string,",
				"          CorrPostCode as short,",
				"          ResAddressLine1 as string,",
				"          ResAddressLine2 as string,",
				"          ResAddressLine3 as string,",
				"          ResAddressLine4 as string,",
				"          ResCountry as string,",
				"          ResPostCode as short,",
				"          PreferedMailCode as string,",
				"          PreferedMailDescription as string,",
				"          TaxNumber as string,",
				"          WorkFlowNumber as integer,",
				"          ClientMemberNumber as integer,",
				"          AddressUnknown as boolean,",
				"          Language as string,",
				"          GuardianName as string,",
				"          TaxIdentificationNo_01 as integer,",
				"          AuthRepID as string,",
				"          FicaStatus as string,",
				"          TaxIndentificationNo_02 as string,",
				"          CountryofTaxResidence_02 as string,",
				"          NationalityISO as string,",
				"          Nationality as string,",
				"          CountryOfDomicile as string,",
				"          CountryofTaxResidency_01 as string,",
				"          IndiciaIndicator as string,",
				"          FATCAStatus as boolean,",
				"          AccountHolderType as string,",
				"          ExternalAdministratorRef as boolean,",
				"          ClientID as short,",
				"          FLEXFATCAStatus as string,",
				"          PoliticallyConnectedIndividual as boolean,",
				"          DateofIncorporation as string,",
				"          DIVTaxExemption as string,",
				"          WTIExemption as string,",
				"          WTIDTARates as string,",
				"          UnitHolderType as string,",
				"          CountryOfResidence as string,",
				"          CIFNumber as integer,",
				"          FamilyFees as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> UnitHolderSource",
				"source(output(",
				"          Id as long,",
				"          UnitHolderCode as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'SELECT Id, UnitHolderCode FROM store.entity_all_unit_holder',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> UnitHolderEntityTable",
				"UnitHolderSource derive(BatchId = $BatchId,",
				"          Provider = \"PPS\",",
				"          DataSource = \"Unit Holder Static Data\",",
				"          EffectiveDate = currentDate(\"yyyy-MM-dd\"),",
				"          HashKey = sha2(256, UnitHolderStatus, FirstNames, MiddleNames, Surname, Initials, Title, IDType, PlaceofIssue, DateofBirth, MaritalStatusCode, MaritalStatusDescription, Gender, TelephoneHomeNumber, \r",
				"TelephoneWorkNumber, CellPhoneNumber, FaxNumber, EmailPrimaryAddress, EmailSecondaryAddress, CompanyName, ContactName, CompanyRegistrationNumber, Commencementdate, CorrAddressLine1, \r",
				"CorrAddressLine2, CorrAddressLine3, CorrAddressLine4, CorrCountry, CorrPostCode, ResAddressLine1, ResAddressLine2, ResAddressLine3, ResAddressLine4, ResCountry, ResPostCode, PreferedMailCode, \r",
				"PreferedMailDescription, TaxNumber, WorkFlowNumber, ClientMemberNumber, AddressUnknown, Language, GuardianName, TaxIdentificationNo_01, AuthRepID, FicaStatus, TaxIndentificationNo_02, \r",
				"CountryofTaxResidence_02, NationalityISO, Nationality, CountryOfDomicile, CountryofTaxResidency_01, IndiciaIndicator, FATCAStatus, AccountHolderType, ExternalAdministratorRef, ClientID, \r",
				"FLEXFATCAStatus, PoliticallyConnectedIndividual, DateofIncorporation, DIVTaxExemption, WTIExemption, WTIDTARates, UnitHolderType, CountryOfResidence, CIFNumber, FamilyFees)) ~> DerivedColumn",
				"DerivedColumn, RenameUnitHolderEntityColumns lookup(UnitHolderID == EntityUnitHolderCode,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupUnitHolderEntityId",
				"UnitHolderEntityTable select(mapColumn(",
				"          EntityId = Id,",
				"          EntityUnitHolderCode = UnitHolderCode",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> RenameUnitHolderEntityColumns",
				"LookupUnitHolderEntityId assert(expectTrue(!isNull(EntityId), false, 'IsValid', null, \"Check data validity\")) ~> ValidateData",
				"ValidateData derive(IsValid = !isError()) ~> DeriveValidColumns",
				"DeriveValidColumns filter(IsValid == false()) ~> FilterInvalidData",
				"DeriveValidColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as long,",
				"          BatchId as string,",
				"          Provider as string,",
				"          DataSource as string,",
				"          UnitHolderId as long,",
				"          ProductId as long,",
				"          FundId as long,",
				"          PolicyId as long,",
				"          LoadId as long,",
				"          PolicyNumber as string,",
				"          PolicyTransactionNumber as long,",
				"          FeeCode as long,",
				"          FeeDescription as string,",
				"          FeePercentage as decimal(20,5),",
				"          FundTransactionNumber as long,",
				"          Amount as decimal(20,5),",
				"          ReversalIndicator as string,",
				"          OldTransactionNumber as string,",
				"          FactFundFeeTransactionKey as long,",
				"          ProductKey as long,",
				"          PolicyKey as long,",
				"          UnitHolderKey as long,",
				"          LoadKey as long,",
				"          IsValid as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 0,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     ignoreAssertFailedRows: true,",
				"     mapColumn(",
				"          BatchId,",
				"          EffectiveDate,",
				"          Provider,",
				"          DataSource,",
				"          UnitHolderId = EntityId,",
				"          UnitHolderCategory,",
				"          UnitHolderStatus,",
				"          FirstNames,",
				"          MiddleNames,",
				"          Surname,",
				"          Initials,",
				"          Title,",
				"          IDType,",
				"          PlaceofIssue,",
				"          DateofBirth,",
				"          MaritalStatusCode,",
				"          MaritalStatusDescription,",
				"          Gender,",
				"          TelephoneHomeNumber,",
				"          TelephoneWorkNumber,",
				"          CellPhoneNumber,",
				"          FaxNumber,",
				"          EmailPrimaryAddress,",
				"          EmailSecondaryAddress,",
				"          CompanyName,",
				"          ContactName,",
				"          CompanyRegistrationNumber,",
				"          CommencementDate = Commencementdate,",
				"          CorrAddressLine1,",
				"          CorrAddressLine2,",
				"          CorrAddressLine3,",
				"          CorrAddressLine4,",
				"          CorrCountry,",
				"          CorrPostCode,",
				"          ResAddressLine1,",
				"          ResAddressLine2,",
				"          ResAddressLine3,",
				"          ResAddressLine4,",
				"          ResCountry,",
				"          ResPostCode,",
				"          PreferredMailCode = PreferedMailCode,",
				"          PreferredMailDescription = PreferedMailDescription,",
				"          TaxNumber,",
				"          WorkFlowNumber,",
				"          ClientMemberNumber,",
				"          AddressUnknown,",
				"          Language,",
				"          GuardianName,",
				"          TaxIdentificationNo_01,",
				"          AuthRepID,",
				"          FicaStatus,",
				"          TaxIndentificationNo_02,",
				"          CountryOfTaxResidence_02 = CountryofTaxResidence_02,",
				"          NationalityISO,",
				"          Nationality,",
				"          CountryOfDomicile,",
				"          CountryOfTaxResidency_01 = CountryofTaxResidency_01,",
				"          IndiciaIndicator,",
				"          FATCAStatus,",
				"          AccountHolderType,",
				"          ExternalAdministratorRef,",
				"          ClientCode = ClientID,",
				"          FLEXFATCAStatus,",
				"          PoliticallyConnectedIndividual,",
				"          DateofIncorporation,",
				"          DIVTaxExemption,",
				"          WTIExemption,",
				"          WTIDTARates,",
				"          UnitHolderType,",
				"          CountryOfResidence,",
				"          CIFNumber,",
				"          FamilyFees,",
				"          IsValid,",
				"          HashKey",
				"     )) ~> LoadToUnitHolderAttributesStage",
				"FilterInvalidData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'sql',",
				"     folderPath: (concat('errors/', $FileDirectory)),",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     partitionFileNames:[($FileName)],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ExportInvalidData"
			]
		}
	}
}